{
  "swagger": "2.0",
  "info": {
    "title": "backend.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/schema/{id}": {
      "get": {
        "summary": "Get Schema",
        "operationId": "GetSchema",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSchema"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Backend"
        ]
      }
    },
    "/v1/schema/{projectID}": {
      "post": {
        "summary": "Create Schema",
        "operationId": "CreateSchema",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSchema"
            }
          }
        },
        "parameters": [
          {
            "name": "projectID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoSchema"
            }
          }
        ],
        "tags": [
          "Backend"
        ]
      }
    },
    "/v1/version": {
      "get": {
        "summary": "Version",
        "operationId": "Version",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoVersionResponse"
            }
          }
        },
        "tags": [
          "Backend"
        ]
      }
    },
    "/v1/{projectID}/{schemaID}": {
      "post": {
        "summary": "CreateRecords",
        "operationId": "CreateRecords",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoRecords"
            }
          }
        },
        "parameters": [
          {
            "name": "projectID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "schemaID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRecords"
            }
          }
        ],
        "tags": [
          "Backend"
        ]
      },
      "patch": {
        "summary": "UpdateRecords",
        "operationId": "UpdateRecords",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoRecords"
            }
          }
        },
        "parameters": [
          {
            "name": "projectID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "schemaID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRecords"
            }
          }
        ],
        "tags": [
          "Backend"
        ]
      }
    }
  },
  "definitions": {
    "protoRecord": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "fields": {
          "type": "object"
        }
      }
    },
    "protoRecords": {
      "type": "object",
      "properties": {
        "projectID": {
          "type": "string"
        },
        "schemaID": {
          "type": "string"
        },
        "records": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protoRecord"
          }
        }
      }
    },
    "protoSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "projectID": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "protoVersionResponse": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    }
  }
}
